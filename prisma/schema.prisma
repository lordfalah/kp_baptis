// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Calon_Baptis {
  id                           String          @id @default(cuid())
  nama_lengkap                 String          @db.VarChar(50)
  jenis_kelamin                Jenis_Kelamin
  tempat_lahir                 String          @db.VarChar(150)
  jenis_baptis                 Jenis_Baptis
  akte_lahir                   String          @db.VarChar(200) // url img
  ktp                          String          @db.VarChar(200) // url img
  surat_katekisasi             String          @db.VarChar(200) // url img
  alamat_lengkap               String          @db.VarChar(225)
  wilayah                      String?         @db.VarChar(80)
  gereja_asal                  String?         @db.VarChar(100)
  surat_keterangan_gereja_asal String?         @db.VarChar(200) // url img
  keluarga                     Keluarga?
  angkatanSlug                 String
  angkatan                     Angkatan_Baptis @relation(fields: [angkatanSlug], references: [nama])
  user                         User            @relation(fields: [userId], references: [id])
  userId                       String          @unique
}

model Angkatan_Baptis {
  id           String         @id @default(cuid())
  nama         String         @unique @db.VarChar(40)
  calon_baptis Calon_Baptis[]
}

enum Jenis_Baptis {
  ANAK
  DEWASA
}

model Keluarga {
  id                String            @id @default(cuid())
  nama_ayah         String            @db.VarChar(50)
  nama_ibu          String            @db.VarChar(50)
  agama_ayah        String            @db.VarChar(20)
  agama_ibu         String            @db.VarChar(20)
  calon_baptis      Calon_Baptis      @relation(fields: [calon_baptisID], references: [id])
  calon_baptisID    String            @unique
  kartu_keluarga    String            @db.VarChar(200) // url img
  status_pernikahan Status_Pernikahan
}

enum Jenis_Kelamin {
  PRIA
  WANITA
}

enum Status_Pernikahan {
  SUDAH
  BELUM
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  role          Role?         @default(USER)
  accounts      Account[]
  sessions      Session[]
  calon_baptis  Calon_Baptis?
}

enum Role {
  USER
  ADMIN
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
